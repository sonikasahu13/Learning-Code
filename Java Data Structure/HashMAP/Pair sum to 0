Pair Sum to 0
Send Feedback
Given a random integer array A of size N. Find and print the pair of elements in the array which sum to 0.
Array A can contain duplicate elements.
While printing a pair, print the smaller element first.
That is, if a valid pair is (6, -6) print "-6 6". There is no constraint that out of 5 pairs which have to be printed in 1st line. You can print pairs in any order, just be careful about the order of elements in a pair.
Input format :
Line 1 : Integer N (Array size)
Line 2 : Array elements (separated by space)
Output format :
Line 1 : Pair 1 elements (separated by space)
Line 2 : Pair 2 elements (separated by space)
Line 3 : and so on
Constraints :
1 <= N <= 10^6
Ai contains all non-zero values
Sample Input:
5
2 1 -2 2 3
Sample Output :
-2 2
-2 2

import java.util.Scanner;

public class Runner {
	public static void main(String[] args) {
		Scanner s=new Scanner(System.in);
		int n = s.nextInt();
		int arr[]=new int[n];
		for(int i=0; i<n; i++)
		{
			arr[i]=s.nextInt();
		}		
		Solution.PairSum(arr, n);
	}
}

import java.util.*;

public class Solution {
	public static void PairSum(int[] input, int size) {
		
		/* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * Print the desired output and don't return anything.
	 	 * Taking input is handled automatically.
		 */
      HashMap<Integer,Integer> hash=new HashMap<>();
        for(int val:input){
            if(val>0)
            {
            if(hash.containsKey(val))
            {
                hash.put(val,hash.get(val)+1);
            }
            else
            {
                hash.put(val,1);
            }
        }
        }
    
        for(int value:input)
        {
        int count=0;
         if(value<0)
         {
             if(hash.containsKey(-(value)));
             {
             while(count!=hash.get(-(value)))
             {
                 System.out.println(value+" "+-(value));
                 count++;
             }
             }
         }   
        }
    }
}
