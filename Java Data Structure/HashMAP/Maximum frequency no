Maximum Frequency Number
Send Feedback
You are given with an array of integers that contain numbers in random order. Write a program to find and return the number which occurs maximum times in the given input.
If more than one element occurs same number of times in the input, return the element which is present in the input first.
Input Format :
Line 1 : An Integer N i.e. size of array
Line 2 : N integers which are elements of the array, separated by spaces
Output Format :
Most frequent element
Constraints :
1 <= N <= 10^5
Sample Input 1 :
13
2 12 2 11 12 2 1 2 2 11 12 2 6 
Sample Output 1 :
2
Sample Input 2 :
3
1 4 5
Sample Output 2 :
1

import java.util.Scanner;

public class Runner {
	
	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int sze = s.nextInt();
		int[] arr = new int[sze];
		for(int index = 0;index<sze;index++){
			arr[index]=s.nextInt();
		}
		System.out.println(Solution.maxFrequencyNumber(arr));
	}
}

import java.util.*;
public class Solution {

	public static int maxFrequencyNumber(int[] arr){
		/* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * Return output and don't print it.
	 	 * Taking input and printing output is handled automatically.
		*/
       HashMap<Integer,Integer> m=new HashMap<Integer,Integer>();
        for(int key:arr)
        {
            if(m.containsKey(key)){
            m.put(key,m.get(key)+1);
                }
            else{
                m.put(key,1);
            }
        }
        int maxcount=0;
        int maxf=0;
        for(int key:arr)
        {
            if(m.get(key)>maxcount){
                maxcount=m.get(key);
                maxf=key;
            }
        }
        return maxf;
	}
}
